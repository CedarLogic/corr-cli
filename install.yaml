---
- name: playbook to install CoRR
  hosts: localhost
  connection: local
  vars:
    local_path: "{{ lookup('env', 'HOME') }}"
    anaconda_path: "{{ local_path }}/anaconda"
    corr_path: "{{ local_path }}/git/corr"
    corr_env: corr-test
    corr_version: master
    corr_repo: usnistgov/corr
    conda: "{{ anaconda_path }}/bin/conda"
    env_path: "{{ anaconda_path }}/envs/{{ corr_env }}/bin"
    python: "{{ anaconda_path }}/envs/{{ corr_env }}/bin/python"

  tasks:

    - name: check if anaconda is installed
      stat: path={{ anaconda_path }}
      register: anaconda_dir

    - name: check if corr is present
      stat: path="{{ corr_path }}/.git"
      register: corr_clone

    - name: download miniconda
      get_url:
        url: https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
        dest: /tmp
        force: no
      when: anaconda_dir.stat.exists == False

    - name: install miniconda
      shell: bash /tmp/Miniconda-latest-Linux-x86_64.sh -b -p {{ anaconda_path }}
      args:
        creates: "{{ anaconda_path }}"
      when: anaconda_dir.stat.exists == False

    - name: update conda
      shell: "{{ conda }} update conda"
      when: anaconda_dir.stat.exists == False

    - name: create corr conda env
      shell: "{{ conda }} create -n {{ corr_env }} python"

    - name: check if corr is present
      stat: path="{{ corr_path }}/.git"
      register: corr_cloned

    - name: clone corr repository
      git:
        repo: https://github.com/{{ corr_repo }}.git
        dest: "{{ corr path }}"
        version: "{{ corr_version }}"
      when: corr_cloned.stat.exists == False

    - include: corr-db/install.yaml
